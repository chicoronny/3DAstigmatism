package org.swing;


import ij.IJ;
import ij.ImagePlus;
import ij.gui.Roi;
import ij.gui.StackWindow;
import ij.plugin.FolderOpener;

import java.awt.CardLayout;
import java.io.File;

import javax.swing.JFileChooser;

import org.data.Calibration;
import org.main.Calibrator;

/**
 *
 * @author Ries
 */
public class PluginFrame extends javax.swing.JFrame {

    /**
     * Creates new form Plugin
     */
    public PluginFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        panel = new javax.swing.JPanel();
        jpanel_default = new javax.swing.JPanel();
        jpanel_cal = new javax.swing.JPanel();
        jButton_import = new javax.swing.JButton();
        jTextField_calimname = new javax.swing.JTextField();
        jLabel_stepsize = new javax.swing.JLabel();
        jTextField_stepsize = new javax.swing.JTextField();
        jButton_roi = new javax.swing.JButton();
        jTextField_roi = new javax.swing.JTextField();
        jButton_calfit = new javax.swing.JButton();
        jTextField_calfit = new javax.swing.JTextField();
        jLabel_range = new javax.swing.JLabel();
        jTextField_rangemin = new javax.swing.JTextField();
        jTextField_rangemax = new javax.swing.JTextField();
        jLabel_rangehyph = new javax.swing.JLabel();
        jButton_calfitcurves = new javax.swing.JButton();
        jTextField_calfitcurves = new javax.swing.JTextField();
        jButton_calsave = new javax.swing.JButton();
        jpanel_loc = new javax.swing.JPanel();
        jButton_loadcal = new javax.swing.JButton();
        jTextField_loccalname = new javax.swing.JTextField();
        jButton_locfit = new javax.swing.JButton();
        jButton_loadim = new javax.swing.JButton();
        jTextField_imname = new javax.swing.JTextField();
        jLabel_fitmethod = new javax.swing.JLabel();
        jComboBox_fitmethod = new javax.swing.JComboBox();
        jLabel_winsize = new javax.swing.JLabel();
        jTextField_winsize = new javax.swing.JTextField();
        jButton_locsave = new javax.swing.JButton();
        jButton_cal = new javax.swing.JButton();
        jButton_loc = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel.setPreferredSize(new java.awt.Dimension(250, 300));
        panel.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout jpanel_defaultLayout = new javax.swing.GroupLayout(jpanel_default);
        jpanel_default.setLayout(jpanel_defaultLayout);
        jpanel_defaultLayout.setHorizontalGroup(
            jpanel_defaultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 272, Short.MAX_VALUE)
        );
        jpanel_defaultLayout.setVerticalGroup(
            jpanel_defaultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 304, Short.MAX_VALUE)
        );

        panel.add(jpanel_default, "def");

        jpanel_cal.setBorder(javax.swing.BorderFactory.createTitledBorder("Calibration"));

        jButton_import.setText("Import");
        jButton_import.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_importActionPerformed(evt);
            }
        });

        jTextField_calimname.setEditable(false);
        jTextField_calimname.setText("Image name");

        jLabel_stepsize.setText("Step size (nm) :");

        jButton_roi.setText("Select ROI");
        jButton_roi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_roiActionPerformed(evt);
            }
        });

        jTextField_roi.setEditable(false);
        jTextField_roi.setText("ROI position");

        jButton_calfit.setText("Fit bead");
        jButton_calfit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_calfitActionPerformed(evt);
            }
        });

        jTextField_calfit.setEditable(false);
        jTextField_calfit.setText("Waiting");

        jLabel_range.setText("Range (nm) :");

        jTextField_rangemin.setText("0");

        jTextField_rangemax.setText("100");
        jTextField_rangemax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_rangemaxActionPerformed(evt);
            }
        });

        jLabel_rangehyph.setText("-");

        jButton_calfitcurves.setText("Fit curves");
        jButton_calfitcurves.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_calfitcurvesActionPerformed(evt);
            }
        });

        jTextField_calfitcurves.setEditable(false);
        jTextField_calfitcurves.setText("Waiting");

        jButton_calsave.setText("Save calibration");
        jButton_calsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_calsaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpanel_calLayout = new javax.swing.GroupLayout(jpanel_cal);
        jpanel_cal.setLayout(jpanel_calLayout);
        jpanel_calLayout.setHorizontalGroup(
            jpanel_calLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanel_calLayout.createSequentialGroup()
                .addGroup(jpanel_calLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpanel_calLayout.createSequentialGroup()
                        .addGroup(jpanel_calLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpanel_calLayout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel_stepsize)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField_stepsize, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpanel_calLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton_roi)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField_roi, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jpanel_calLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jpanel_calLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpanel_calLayout.createSequentialGroup()
                                .addComponent(jButton_import, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15)
                                .addComponent(jTextField_calimname))
                            .addGroup(jpanel_calLayout.createSequentialGroup()
                                .addGroup(jpanel_calLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton_calfit, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel_range))
                                .addGap(21, 21, 21)
                                .addGroup(jpanel_calLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jpanel_calLayout.createSequentialGroup()
                                        .addComponent(jTextField_rangemin, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel_rangehyph)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextField_rangemax, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jTextField_calfit)))
                            .addGroup(jpanel_calLayout.createSequentialGroup()
                                .addComponent(jButton_calfitcurves, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField_calfitcurves, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
            .addGroup(jpanel_calLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jButton_calsave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpanel_calLayout.setVerticalGroup(
            jpanel_calLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanel_calLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpanel_calLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_import)
                    .addComponent(jTextField_calimname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jpanel_calLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_stepsize)
                    .addComponent(jTextField_stepsize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpanel_calLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_roi)
                    .addComponent(jTextField_roi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpanel_calLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_calfit)
                    .addComponent(jTextField_calfit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpanel_calLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_range)
                    .addComponent(jTextField_rangemin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_rangemax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_rangehyph))
                .addGap(18, 18, 18)
                .addGroup(jpanel_calLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_calfitcurves)
                    .addComponent(jTextField_calfitcurves, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jButton_calsave))
        );

        panel.add(jpanel_cal, "cal");

        jpanel_loc.setBorder(javax.swing.BorderFactory.createTitledBorder("Localize"));

        jButton_loadcal.setText("Load calibration");
        jButton_loadcal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_loadcalActionPerformed(evt);
            }
        });

        jTextField_loccalname.setEditable(false);
        jTextField_loccalname.setText("Calibration name");

        jButton_locfit.setText("Fit stack");
        jButton_locfit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_locfitActionPerformed(evt);
            }
        });

        jButton_loadim.setText("Load images");
        jButton_loadim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_loadimActionPerformed(evt);
            }
        });

        jTextField_imname.setEditable(false);
        jTextField_imname.setText("Stack name");

        jLabel_fitmethod.setText("Fit method :");

        jComboBox_fitmethod.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1D Gaussian proj", "2D Elliptical Gauss", "Centroid" }));
        jComboBox_fitmethod.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jComboBox_fitmethodPropertyChange(evt);
            }
        });

        jLabel_winsize.setText("Window size :");

        jTextField_winsize.setText("5");

        jButton_locsave.setText("Save");
        jButton_locsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_locsaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpanel_locLayout = new javax.swing.GroupLayout(jpanel_loc);
        jpanel_loc.setLayout(jpanel_locLayout);
        jpanel_locLayout.setHorizontalGroup(
            jpanel_locLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanel_locLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jpanel_locLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpanel_locLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton_loadim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_loadcal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jpanel_locLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jpanel_locLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel_winsize)
                            .addComponent(jLabel_fitmethod))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpanel_locLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField_loccalname)
                    .addComponent(jTextField_imname)
                    .addGroup(jpanel_locLayout.createSequentialGroup()
                        .addGroup(jpanel_locLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox_fitmethod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_winsize, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 8, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jpanel_locLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addGroup(jpanel_locLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton_locfit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_locsave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpanel_locLayout.setVerticalGroup(
            jpanel_locLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanel_locLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpanel_locLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_loadcal)
                    .addComponent(jTextField_loccalname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpanel_locLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_loadim)
                    .addComponent(jTextField_imname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jpanel_locLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_fitmethod)
                    .addComponent(jComboBox_fitmethod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpanel_locLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_winsize)
                    .addComponent(jTextField_winsize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jButton_locfit)
                .addGap(18, 18, 18)
                .addComponent(jButton_locsave)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        panel.add(jpanel_loc, "loc");

        jButton_cal.setText("New calibration");
        jButton_cal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_calActionPerformed(evt);
            }
        });

        jButton_loc.setText("Localize");
        jButton_loc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_locActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jButton_cal)
                .addGap(18, 18, 18)
                .addComponent(jButton_loc, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_cal)
                    .addComponent(jButton_loc))
                .addGap(18, 18, 18)
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    

    /////////////////////////////////////////////////////////////////////////////////
    //// Action handlers
    
    // General
    private void jButton_locActionPerformed(java.awt.event.ActionEvent evt) {                                            
         CardLayout card = (CardLayout) panel.getLayout();
         card.show(panel, "loc");
    }                                           

    private void jButton_calActionPerformed(java.awt.event.ActionEvent evt) {                                            
         CardLayout card = (CardLayout) panel.getLayout();
         card.show(panel, "cal");
    }                                           

    // Calibration
    private void jTextField_rangemaxActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        // TODO add your handling code here:
    }                                                   

    private void jButton_importActionPerformed(java.awt.event.ActionEvent evt) {                                               
    	JFileChooser fc = new JFileChooser();
    	fc.setCurrentDirectory(new File("/home/ronny/ownCloud/storm"));
    	fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
    	
    	int returnVal = fc.showOpenDialog(this);
    	 
        if (returnVal != JFileChooser.APPROVE_OPTION)
        	return;
        
        File file = fc.getSelectedFile();
        jTextField_calimname.setText(file.getName());
        cal_filePath = file.getAbsolutePath();
        
        if (file.isDirectory()){
        	cal_im = FolderOpener.open(cal_filePath);
        }
        
        if (file.isFile()){
        	cal_im = new ImagePlus(cal_filePath);
        }
        
        cal_nSlice = cal_im.getNSlices();
		new StackWindow(cal_im);
		cal_im.setRoi((int) (cal_im.getWidth()/2 - 10), (int) (cal_im.getHeight()/2 - 10), 20, 20);							// why?
    }                                              

    private void jButton_roiActionPerformed(java.awt.event.ActionEvent evt) {                                            
    	Roi roitemp = cal_im.getRoi();
    	if (roitemp.getType() != Roi.RECTANGLE)  {
			IJ.showMessage("Needs a rectangle ROI.");
			return;
		}
		try{																				
			double w = roitemp.getFloatWidth();
			double h = roitemp.getFloatHeight();
			if (w!=h) {
				IJ.showMessage("Needs a quadratic ROI /n(hint: press Shift).");
				return;
			}
			jTextField_roi.setText("Roi ("+w+","+h+")");
			isRoi = true;																		// what is it for?
			roi = roitemp;
		} catch (NullPointerException e) {
			roi = new Roi(0, 0, cal_im.getWidth(), cal_im.getHeight());
			jTextField_roi.setText("Whole image");
		} 
    }                                           

    private void jButton_calfitActionPerformed(java.awt.event.ActionEvent evt) {                                               
		cal = new Calibrator(cal_im, zstep, roi);
		cal.fitStack(jTextField_calfit);													// Passing a component to update it is not so proper
		jTextField_calfit.setText("In progress");
    }                                              

    private void jButton_calfitcurvesActionPerformed(java.awt.event.ActionEvent evt) {                                                     
    	cal.fitCalibrationCurve(jTextField_calfitcurves,rangeMin, rangeMax);			    // same here
		jTextField_calfit.setText("In progress");									 
    }                                                    

    private void jButton_calsaveActionPerformed(java.awt.event.ActionEvent evt) {                                                
        ////////////////////////////////////////////////////////////////////////////////////// here get input from user to save the file (path, name)
    	cal.saveCalib("dummy");
    }                                               

    
    // Localize
    private void jButton_loadcalActionPerformed(java.awt.event.ActionEvent evt) {                                                
        calib = new Calibration();
        ////////////////////////////////////////////////////////////////////////////////////// JFileCHooser
        calib.readCSV(calibrationPath);
        jTextField_loccalname.setText(calibrationPath);
    }                                               

    private void jButton_loadimActionPerformed(java.awt.event.ActionEvent evt) {                                               
    	JFileChooser fc = new JFileChooser();
    	fc.setCurrentDirectory(new File("/home/ronny/ownCloud/storm"));
    	fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
    	
    	int returnVal = fc.showOpenDialog(this);
    	 
        if (returnVal != JFileChooser.APPROVE_OPTION)
        	return;
        
        File file = fc.getSelectedFile();
        jTextField_imname.setText(file.getName());
        loc_filePath = file.getAbsolutePath();
        
        if (file.isDirectory()){
        	loc_im = FolderOpener.open(cal_filePath);
        }
        
        if (file.isFile()){
        	loc_im = new ImagePlus(cal_filePath);
        }
        
        loc_nSlice = loc_im.getNSlices();
		new StackWindow(loc_im);
    }                                              

    private void jComboBox_fitmethodPropertyChange(java.beans.PropertyChangeEvent evt) {                                                   
        // TODO add your handling code here:
    }                                                  

    private void jButton_locfitActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
    }                                              

    private void jButton_locsaveActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
    }                                               


    // Variables declaration - do not modify
    
    // calibration
    String cal_filePath;
    ImagePlus cal_im;
    int cal_nSlice, zstep;
    boolean isRoi = false;
    Roi roi;
    Calibrator cal;
    int rangeMin, rangeMax;
    
    // localize
    Calibration calib;
    String calibrationPath, loc_filePath;
    ImagePlus loc_im;
    int loc_nSlice;
    
    // swing
    private javax.swing.JButton jButton_cal;
    private javax.swing.JButton jButton_calfit;
    private javax.swing.JButton jButton_calfitcurves;
    private javax.swing.JButton jButton_calsave;
    private javax.swing.JButton jButton_import;
    private javax.swing.JButton jButton_loadcal;
    private javax.swing.JButton jButton_loadim;
    private javax.swing.JButton jButton_loc;
    private javax.swing.JButton jButton_locfit;
    private javax.swing.JButton jButton_locsave;
    private javax.swing.JButton jButton_roi;
    private javax.swing.JComboBox jComboBox_fitmethod;
    private javax.swing.JLabel jLabel_fitmethod;
    private javax.swing.JLabel jLabel_range;
    private javax.swing.JLabel jLabel_rangehyph;
    private javax.swing.JLabel jLabel_stepsize;
    private javax.swing.JLabel jLabel_winsize;
    private javax.swing.JTextField jTextField_calfit;
    private javax.swing.JTextField jTextField_calfitcurves;
    private javax.swing.JTextField jTextField_calimname;
    private javax.swing.JTextField jTextField_imname;
    private javax.swing.JTextField jTextField_loccalname;
    private javax.swing.JTextField jTextField_rangemax;
    private javax.swing.JTextField jTextField_rangemin;
    private javax.swing.JTextField jTextField_roi;
    private javax.swing.JTextField jTextField_stepsize;
    private javax.swing.JTextField jTextField_winsize;
    private javax.swing.JPanel jpanel_cal;
    private javax.swing.JPanel jpanel_default;
    private javax.swing.JPanel jpanel_loc;
    private javax.swing.JPanel panel;
    // End of variables declaration                   
}
